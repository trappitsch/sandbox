import { Button, Palette, SpinBox, StandardButton, Switch, TabWidget } from "std-widgets.slint";
import { Counter } from "main_page.slint";
import { DialogPage } from "dialog_page.slint";

export component AppWindow inherits Window {

    // Designs
    in-out property <bool> dark_mode: false;
    callback color_scheme;
    color_scheme() => {
        Palette.color-scheme = dark_mode ? ColorScheme.dark : ColorScheme.light;
    }

    // Main page callbacks and properties
    callback request-increase-value <=> main_page.request-increase-value;
    in-out property counter <=> main_page.counter;
    callback settings_window <=> main_page.settings_window;
    callback settings_print <=> main_page.settings_print;

    // Dialog page callbacks
    callback message_dialog <=> dialog_page.message_dialog;
    callback question_dialog <=> dialog_page.question_dialog;


    width: 300px;
    height: 500px;
    title: "App Window Title";
    
    init => { 
        color_scheme();
    }



    TabWidget {

        Tab {
            title: "Main page";
            main_page := Counter { }
        }

        Tab {
            title: "Dialog page";
            dialog_page := DialogPage { }
        }
    }
}

export component SettingsDialog inherits Dialog {
    in-out property <int> settings_value;
    in-out property <bool> dark_mode: false;

    init => {
        Palette.color-scheme = dark_mode ? ColorScheme.dark : ColorScheme.light;
    }

    title: "Settings";
    preferred-width: 200px;
    preferred-height: 125px;

    VerticalLayout {
    Switch {
            horizontal-stretch: 0;
            text: @tr("Dark Mode");
            checked: Palette.color-scheme == ColorScheme.dark;
            toggled => {                
                Palette.color-scheme = self.checked ? ColorScheme.dark : ColorScheme.light;
                dark_mode = self.checked;
            }
        }

    HorizontalLayout {
        Text {
            text: "Some number:";
        }

        SpinBox {
            value <=> root.settings_value;
        }
    }
        }

    StandardButton {
        kind: ok;
    }

    StandardButton {
        kind: cancel;
    }
}

// Re-Export Dialogs
